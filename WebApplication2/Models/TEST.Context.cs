//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication2.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TestinterviewEntities : DbContext
    {
        public TestinterviewEntities()
            : base("name=TestinterviewEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<cabang> cabangs { get; set; }
        public virtual DbSet<karyawan> karyawans { get; set; }
        public virtual DbSet<tax> taxes { get; set; }
        public virtual DbSet<transaksi> transaksis { get; set; }
    
        public virtual ObjectResult<Printdatakar_Result> Printdatakar(Nullable<int> id_kar)
        {
            var id_karParameter = id_kar.HasValue ?
                new ObjectParameter("id_kar", id_kar) :
                new ObjectParameter("id_kar", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Printdatakar_Result>("Printdatakar", id_karParameter);
        }
    
        public virtual int Save_cabang(Nullable<int> id, string nama_cab, string kode_cab, Nullable<bool> aktif, string action)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nama_cabParameter = nama_cab != null ?
                new ObjectParameter("nama_cab", nama_cab) :
                new ObjectParameter("nama_cab", typeof(string));
    
            var kode_cabParameter = kode_cab != null ?
                new ObjectParameter("kode_cab", kode_cab) :
                new ObjectParameter("kode_cab", typeof(string));
    
            var aktifParameter = aktif.HasValue ?
                new ObjectParameter("aktif", aktif) :
                new ObjectParameter("aktif", typeof(bool));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Save_cabang", idParameter, nama_cabParameter, kode_cabParameter, aktifParameter, actionParameter);
        }
    
        public virtual int Save_transaksi(Nullable<int> id, Nullable<short> tax_id, Nullable<int> id_kar, Nullable<decimal> total_pem, Nullable<decimal> price, Nullable<double> qty, string action)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var tax_idParameter = tax_id.HasValue ?
                new ObjectParameter("tax_id", tax_id) :
                new ObjectParameter("tax_id", typeof(short));
    
            var id_karParameter = id_kar.HasValue ?
                new ObjectParameter("id_kar", id_kar) :
                new ObjectParameter("id_kar", typeof(int));
    
            var total_pemParameter = total_pem.HasValue ?
                new ObjectParameter("total_pem", total_pem) :
                new ObjectParameter("total_pem", typeof(decimal));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("qty", qty) :
                new ObjectParameter("qty", typeof(double));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Save_transaksi", idParameter, tax_idParameter, id_karParameter, total_pemParameter, priceParameter, qtyParameter, actionParameter);
        }
    }
}
